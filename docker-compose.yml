services:
  mqtt:
    image: eclipse-mosquitto:latest
    container_name: mqtt_broker
    ports:
      - "1883:1883"
    #networks:
    #  - dev_network
    volumes:
    - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    network_mode: host 

  home_assistant:
    image: homeassistant/home-assistant:stable
    container_name: home_assistant
    volumes:
      - /run/dbus/system_bus_socket:/run/dbus/system_bus_socket:ro  # Expose the host's D-Bus socket 
    ports:
      - "8123:8123"
    #networks:
    #  - dev_network
    privileged: true
    network_mode: host

  bluez_customized:
    build:
      context: ./deploy/bluez_customized
      dockerfile: Dockerfile.prod
    container_name: bluez_customized
    volumes:
      - /run/dbus/system_bus_socket:/run/dbus/system_bus_socket:ro  # Expose the host's D-Bus socket 
  #    - /dev:/dev                  # Expose the host's Bluetooth device to the container
  #    - /sys:/sys                  # Mount sys files for Bluetooth access

      #- /sys/fs/cgroup:/sys/fs/cgroup:ro  # Mount cgroup filesystem
    security_opt:
      - apparmor=unconfined
    privileged: true
    stdin_open: true  # Keep stdin open for interactive terminal sessions
    tty: true     
    user: root     
    network_mode: host 

  briloner_mqtt_gateway_cpp_dev:
    build:
      context: .
      dockerfile: ./.devcontainer/Dockerfile  # Your Python dev container
    container_name: briloner_mqtt_gateway_cpp_dev
    #networks:
    #  - dev_network
    volumes:
      - .:/workspace  # Mount your code into the container
      - /run/dbus/system_bus_socket:/run/dbus/system_bus_socket   # Expose the host's D-Bus socket 
      #- /usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:ro
      #- /lib/systemd:/lib/systemd:ro
      #- /etc/systemd:/etc/systemd:ro
    #  - /run/dbus:/host/run/dbus  # Expose the host's D-Bus socket      
    #  - "/dev:/dev"  # Ensures the container has access to all devices
    security_opt:
      - apparmor=unconfined
    stdin_open: true  # Keep stdin open for interactive terminal sessions
    tty: true         # Enable TTY for interactive commands
    privileged: true  # Enable privileged mode    
    user: root     
    network_mode: host     
    environment:
      - G_MESSAGES_DEBUG=all
      - G_DEBUG=gc-friendly


networks:
  dev_network:
    driver: bridge
